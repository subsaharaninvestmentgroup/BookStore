'use client';

import * as React from 'react';
import { useFormState } from 'react-dom';
import { Bot, Loader2 } from 'lucide-react';
import { Button } from '@/components/ui/button';
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from '@/components/ui/card';
import { Label } from '@/components/ui/label';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select';
import { Textarea } from '@/components/ui/textarea';
import { historicalSalesData } from '@/lib/data';
import { getSalesForecast } from '@/app/actions';
import { Alert, AlertDescription, AlertTitle } from '../ui/alert';

const initialState = {
    message: null,
    forecast: null,
};

function SubmitButton() {
    // This hook is not available in React Canary, but will be in stable. For now, this is a placeholder.
    // In a real app, you would use useFormStatus().
    const [pending, setPending] = React.useState(false);
    
    return (
      <Button type="submit" disabled={pending} className="w-full">
        {pending ? <Loader2 className="mr-2 h-4 w-4 animate-spin" /> : <Bot className="mr-2 h-4 w-4" />}
        Generate Forecast
      </Button>
    );
  }

export default function Forecasting() {
    const [state, formAction] = useFormState(getSalesForecast, initialState);

    return (
        <form action={formAction}>
            <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-7">
                <Card className="lg:col-span-3">
                    <CardHeader>
                        <CardTitle>Sales Forecasting</CardTitle>
                        <CardDescription>
                            Use AI to forecast future sales based on historical data.
                        </CardDescription>
                    </CardHeader>
                    <CardContent className="grid gap-6">
                        <div className="grid gap-3">
                            <Label htmlFor="historicalData">Historical Sales Data</Label>
                            <Textarea
                                id="historicalData"
                                name="historicalData"
                                defaultValue={historicalSalesData}
                                className="min-h-48"
                                required
                            />
                            <CardDescription>
                                Format: YYYY-MM-DD: sales_amount. Each entry on a new line.
                            </CardDescription>
                        </div>
                        <div className="grid gap-3">
                            <Label htmlFor="forecastHorizon">Forecast Horizon</Label>
                            <Select name="forecastHorizon" defaultValue="next-quarter" required>
                                <SelectTrigger>
                                <SelectValue placeholder="Select horizon" />
                                </SelectTrigger>
                                <SelectContent>
                                    <SelectItem value="next-month">Next Month</SelectItem>
                                    <SelectItem value="next-quarter">Next Quarter</SelectItem>
                                    <SelectItem value="next-6-months">Next 6 Months</SelectItem>
                                    <SelectItem value="next-year">Next Year</SelectItem>
                                </SelectContent>
                            </Select>
                        </div>
                    </CardContent>
                    <CardFooter>
                         <Button type="submit" className="w-full">
                            <Bot className="mr-2 h-4 w-4" />
                            Generate Forecast
                        </Button>
                    </CardFooter>
                </Card>
                <Card className="lg:col-span-4">
                    <CardHeader>
                        <CardTitle>AI-Generated Forecast</CardTitle>
                        <CardDescription>
                            The forecast generated by the model will appear here.
                        </CardDescription>
                    </CardHeader>
                    <CardContent className="min-h-[400px]">
                        {state?.message && (
                            <Alert variant="destructive">
                                <AlertTitle>Error</AlertTitle>
                                <AlertDescription>{state.message}</AlertDescription>
                            </Alert>
                        )}
                        {state?.forecast ? (
                            <div className="prose prose-sm max-w-none text-foreground whitespace-pre-wrap">
                                {state.forecast}
                            </div>
                        ) : (
                            <div className="flex items-center justify-center h-full text-muted-foreground">
                                <p>Your forecast will be displayed here once generated.</p>
                            </div>
                        )}
                    </CardContent>
                </Card>
            </div>
        </form>
    );
}
